@inject AuthStateService AuthStateService

<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">SkiRentalApp</a>
	</div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
			</NavLink>
		</div>

		@if (!AuthStateService.IsLoggedIn)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="login">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="register">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Register
				</NavLink>
			</div>
		}
		else
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="rentItem">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Rent Item
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="returnItem">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Return Item
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="rentalList">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Rentallist
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="rentalStats">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Rentalstatistic
				</NavLink>
			</div>

		}

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="customers">
				<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Customer Service
			</NavLink>
		</div>
	</nav>
</div>

@code {
	protected override void OnInitialized()
	{
		AuthStateService.AuthStateChanged += HandleAuthStateChanged;
	}

	private void HandleAuthStateChanged()
	{
		InvokeAsync(StateHasChanged);
	}
}
